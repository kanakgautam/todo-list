{"version":3,"sources":["todo.js","App.js","index.js"],"names":["Todo","props","value","onClick","deleteItem","pos","className","App","useState","inputText","setInputText","items","setItems","id","prevValue","filter","element","index","onChange","event","newValue","target","type","map","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6KAGe,SAASA,EAAKC,GAEzB,OACI,8BACI,+BAAKA,EAAMC,MACX,wBAAQC,QAAS,WACbF,EAAMG,WAAWH,EAAMI,MACxBC,UAAU,cAFb,oBCuCGC,MA5Cf,WAEE,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KAcA,SAASR,EAAWS,GAClBD,GAAS,SAACE,GACR,OAAOA,EAAUC,QAAO,SAACC,EAASC,GAChC,OAAOA,IAAUJ,QAMvB,OACE,sBAAKP,UAAU,YAAf,UACE,oBAAIA,UAAU,UAAd,uBACA,sBAAKA,UAAU,OAAf,UACE,uBAAOY,SAzBb,SAAsBC,GACpB,IAAMC,EAAWD,EAAME,OAAOnB,MAC9BQ,EAAaU,IAuBsBE,KAAK,OAAOpB,MAAOO,IAClD,wBAAQN,QArBd,WACES,GAAS,SAACE,GACR,MAAM,GAAN,mBAAWA,GAAX,CAAsBL,OAExBC,EAAa,KAiBqBJ,UAAU,eAAxC,oBAEF,8BACE,oBAAIA,UAAU,OAAd,SACGK,EAAMY,KAAI,SAACP,EAASC,GACnB,OAAO,cAACjB,EAAD,CAAME,MAAOc,EAAqBX,IAAKY,EAAOb,WAAYA,GAA/Ba,cClC9CO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.d24669f8.chunk.js","sourcesContent":["import React, { useState } from 'react'\n\n\nexport default function Todo(props) {\n\n    return (\n        <div>\n            <li>{props.value}\n            <button onClick={() => {\n                props.deleteItem(props.pos);\n            }} className=\"button-list\">X</button>\n            </li>\n        </div>\n\n    )\n}\n","import react, { useState } from \"react\";\nimport Todo from \"./todo\"\n\nfunction App() {\n\n  const [inputText, setInputText] = useState(\"\");\n  const [items, setItems] = useState([]);\n\n  function handleChange(event) {\n    const newValue = event.target.value\n    setInputText(newValue);\n  }\n\n  function handleClick() {\n    setItems((prevValue) => {\n      return [...prevValue, inputText];\n    })\n    setInputText(\"\");\n  }\n\n  function deleteItem(id) {\n    setItems((prevValue) => {\n      return prevValue.filter((element, index) => {\n        return index !== id;\n      })\n    })\n\n  }\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"heading\">Todo-List</h1>\n      <div className=\"form\">\n        <input onChange={handleChange} type=\"text\" value={inputText}></input>\n        <button onClick={handleClick} className=\"button-input\">Add</button>\n      </div>\n      <div>\n        <ul className=\"list\">\n          {items.map((element, index) => {\n            return <Todo value={element} key={index} pos={index} deleteItem={deleteItem} />\n          })}\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}